{
	"info": {
		"_postman_id": "a82a9ae7-7465-4498-82f8-91c170d7e95d",
		"name": "Assignment-3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31541777"
	},
	"item": [
		{
			"name": "User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"  pm.response.to.have.status(201);",
							"});",
							"",
							"",
							"pm.test(\"Response time is within an acceptable range\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('email');",
							"    pm.expect(responseData).to.have.property('password');",
							"    pm.expect(responseData).to.have.property('username');",
							"});",
							"",
							"pm.test(\"Email is in a valid format\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.email).to.be.a('string').and.to.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"arshit@gmail.com\",\n    \"password\": \"arshit@123\",\n    \"username\": \"Arsshit\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5246/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/user",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "User/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 404\", function () {",
							"    pm.expect(pm.response.code).to.equal(404);",
							"});",
							"",
							"pm.test(\"Response has the required fields - type, title, status, and traceId\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.type).to.exist;",
							"    pm.expect(responseData.title).to.exist;",
							"    pm.expect(responseData.status).to.exist;",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/user/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "User/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is set to text/plain\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"text/plain\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/user/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"user",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"  pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('id');",
							"    pm.expect(responseData).to.have.property('description');",
							"    pm.expect(responseData).to.have.property('image');",
							"    pm.expect(responseData).to.have.property('price');",
							"    pm.expect(responseData).to.have.property('quantity');",
							"});",
							"",
							"",
							"pm.test(\"Price and quantity are in valid numeric format\", function () {",
							"  const responseData = pm.response.json();",
							"",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.price).to.match(/^\\d+(\\.\\d+)?$/, \"Price should be in valid numeric format\");",
							"  pm.expect(responseData.quantity).to.match(/^\\d+$/, \"Quantity should be in valid numeric format\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Item\",\n    \"image\": \"URL\",\n    \"price\": \"200\",\n    \"quantity\": \"4\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5246/product",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/product",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"product"
					]
				}
			},
			"response": []
		},
		{
			"name": "Product/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is set to text/plain\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"text/plain\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/product/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"product",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"pm.test(\"Quantity is a non-negative integer\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.quantity).to.exist;",
							"    pm.expect(responseData.quantity).to.be.a('number');",
							"    pm.expect(responseData.quantity).to.satisfy((quantity) => quantity >= 0, \"Quantity must be a non-negative integer\");",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"product_id\": \"2\",\n    \"user_id\": \"2\",\n    \"order_date\": \"02/23/2024\",\n    \"quantity\":\"2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5246/order",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/order",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Order/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is set to text/plain\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"text/plain\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/order/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"order",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"  pm.expect(pm.response.to.have.status(201));",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields - id, product_id, quantity, and user_id\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.id).to.exist;",
							"  pm.expect(responseData.product_id).to.exist;",
							"  pm.expect(responseData.quantity).to.exist;",
							"  pm.expect(responseData.user_id).to.exist;",
							"});",
							"",
							"pm.test(\"Response time is less than 300ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"product_id\": \"1\",\n    \"user_id\": \"1\",\n    \"quantity\": \"10\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5246/cart",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"cart"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/cart",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"cart"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cart/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is set to text/plain\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"text/plain\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/cart/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"cart",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"pm.test(\"Product_id is a non-empty string\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.product_id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Product_id should not be empty\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"product_id\": \"1\",\n    \"user_id\": \"1\",\n    \"comment\": \"Best\",\n    \"rating\": \"4\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5246/cart",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"cart"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/cart",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"cart"
					]
				}
			},
			"response": []
		},
		{
			"name": "Comment/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is set to text/plain\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.equal(\"text/plain\");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5246/cart/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5246",
					"path": [
						"cart",
						"1"
					]
				}
			},
			"response": []
		}
	]
}